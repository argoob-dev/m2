<style>
    .algolia td {
        padding-top: 1rem !important;
    }

    .algolia-config-warning {
        font-size: 30px;
        color: #D83900;
        position: relative;
        top: 6px;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function(event) {
    requirejs(['algoliaAdminBundle'], function(algoliaAdminBundle) {
        algoliaAdminBundle.$(function ($) {
            $('form[action*="algoliasearch"] .accordion .config .label').css('width', 'auto');
            $('form[action*="algoliasearch"] .accordion .config .value').css('width', 'auto');

            var fixHelper = function(e, ui) {
                ui.children().each(function() {
                    $(this).width($(this).width());
                });

                return ui;
            };

            setTimeout(function () {
            	$('form[action*="algoliasearch"] .admin__control-table tbody').sortable({
                    containment: "parent",
                    items: 'tr',
                    tolerance: 'pointer',
                    helper: fixHelper,
                    start: function (event, ui) {
                        $(ui.item).css('margin-left', '10px');
                    }
                });

                $('form[action*="algoliasearch"] .admin__control-table tbody tr td').css('cursor', 'move');
            }, 1000);

            // QUEUE INFO

            var url = window.location.href;
            if (url.indexOf('section/algoliasearch_') !== -1) {
            	var position = url.indexOf('/admin/system_config/edit/section'),
                    baseUrl = url.substring(0, position);

                $.getJSON(baseUrl + '/algolia_algoliasearch/queue/info/', function(queueInfo) {
                    var message = '<span style="font-size: 25px; position: relative; top: 5px;">âš </span> ' +
                        '<strong style="font-size: 1.15em;">Your <a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing Queue</a> is not enabled</strong><br>' +
                        'It is highly recommended that you enable it, especially if you are on a production environment. ' +
                        'You can learn how to enable the index queue in our documentation: <a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing Queue</a>';

                    if (queueInfo.isEnabled === true) {
                        message = '<strong style="font-size: 1.15em;"><a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing queue</a> information</strong><br>' +
                            'Number of queued jobs: <strong>' + queueInfo.currentSize + '</strong>, ' +
                            'all queued jobs will be processed in appr. <strong>' + queueInfo.eta + '</strong> ' +
                            '<small style="color: #2f2f2f; font-size: .8em;">(assuming your queue runner runs every 5 minutes)</small><br>' +
                            'If you want to clear the queue, hit the button: <button class="algolia_clear_queue">Clear the queue</button><br />' +
                            '<small style="color: #2f2f2f; font-size: .9em; display: inline-block;">' +
                            'More information about how the indexing queue works you can find in the documentation: <a href="https://community.algolia.com/magento/doc/m2/indexing-queue/?utm_source=magento&utm_medium=extension&utm_campaign=magento_2&utm_term=shop-owner&utm_content=doc-link" target="_blank">Indexing queue</a>' +
                            '</small>';
                    }

                    $('.entry-edit').before('<div style="font-size: 1.1em; line-height: 25px; padding: 3px 8px; border: 1px solid; margin-bottom: 10px; color: #333;">' + message + '</div>');
                });

	            $(document).on('click', '.algolia_clear_queue', function(e) {
		            e.preventDefault();

		            if (!confirm('Are you sure you want to clear the queue? This operation cannot be reverted.')) {
			            return false;
		            }

		            $(this).replaceWith('<span class="algolia_clearing" style="font-weight: bold;">Clearing the queue <span id="wait"></span></span>');
		            var dots = window.setInterval( function() {
			            var $wait = $('#wait'),
				            waitText = $wait.text();

			            if (waitText.length > 2) {
				            $wait.text('');
			            }
			            else {
				            $wait.text(waitText + '.');
			            }
		            }, 200);

		            $.getJSON(baseUrl + '/algolia_algoliasearch/queue/clear/', function(payload) {
			            window.clearInterval(dots);

			            if (payload.status === 'ok') {
				            $('.algolia_clearing').replaceWith('<span class="algolia_cleared" style="font-weight: bold; color: darkgreen;">The queue has been cleared</span>');
			            }
			            else {
				            $('.algolia_clearing').replaceWith('<span class="algolia_clear_errored" style="font-weight: bold; color: darkred;">There was an error during clearing the queue - <i>'+payload.message+'</i></span>');
			            }
		            });

		            return false;
	            });
            }


            // SYNONYMS

            handleSynonyms($('#algoliasearch_synonyms_synonyms_group_enable_synonyms').val());

            $(document).on('change', '#algoliasearch_synonyms_synonyms_group_enable_synonyms', function() {
            	handleSynonyms($(this).val());
            });

	        function handleSynonyms(enabled) {
		        var $rows = $('#row_algoliasearch_synonyms_synonyms_group_synonyms, #row_algoliasearch_synonyms_synonyms_group_oneway_synonyms, #row_algoliasearch_synonyms_synonyms_group_synonyms_file');

		        if (enabled === '1') {
			        $rows.show();
		        } else {
			        $rows.hide();
		        }
	        }

	        // ORDERED / UNORDERED
	        var $attributesRows = $('#algoliasearch_products_products_product_additional_attributes, #algoliasearch_categories_categories_category_additional_attributes');
	        initAttributes($attributesRows);

	        $attributesRows.on('click', 'button[id^="addToEndBtn"]', function (e) {
		        initAttributes($attributesRows);
	        });

	        $attributesRows.on('change', 'select[name$="[searchable]"]', function (e) {
		        handleAttributes($(this));
	        });

	        function initAttributes($attributesRows) {
		        $attributesRows.find('select[name$="[searchable]"]').each(function(e) {
			        handleAttributes($(this));
		        });
	        }

	        function handleAttributes($selectBox) {
		        var selectValue = $selectBox.val(),
			        $input = $selectBox.parent('td').next().find('select[name$="[order]"]');

		        if(selectValue !== '1') {
			        $input.hide();
		        }
		        else {
			        $input.show();
		        }
	        }
        });
    });
});
</script>
